/* automatically generated by rust-bindgen 0.70.1 */

pub const LIMINE_H: u32 = 1;
pub const _STDINT_H: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const __GLIBC_USE_ISOC23: u32 = 0;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_POSIX_IMPLICITLY: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __WORDSIZE: u32 = 32;
pub const __WORDSIZE32_SIZE_ULONG: u32 = 0;
pub const __WORDSIZE32_PTRDIFF_LONG: u32 = 0;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __TIMESIZE: u32 = 32;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;
pub const __GLIBC_USE_C23_STRTOL: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_60559_BFP__: u32 = 201404;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_IEC_60559_COMPLEX__: u32 = 201404;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 40;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI: u32 = 0;
pub const __HAVE_GENERIC_SELECTION: u32 = 1;
pub const __GLIBC_USE_LIB_EXT2: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT_C23: u32 = 0;
pub const __GLIBC_USE_IEC_60559_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C23: u32 = 0;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;
pub const _BITS_TYPES_H: u32 = 1;
pub const _BITS_TYPESIZES_H: u32 = 1;
pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 0;
pub const __STATFS_MATCHES_STATFS64: u32 = 0;
pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64: u32 = 0;
pub const __FD_SETSIZE: u32 = 1024;
pub const _BITS_TIME64_H: u32 = 1;
pub const _BITS_WCHAR_H: u32 = 1;
pub const _BITS_STDINT_INTN_H: u32 = 1;
pub const _BITS_STDINT_UINTN_H: u32 = 1;
pub const _BITS_STDINT_LEAST_H: u32 = 1;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i32 = -2147483648;
pub const INT_FAST32_MIN: i32 = -2147483648;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u32 = 2147483647;
pub const INT_FAST32_MAX: u32 = 2147483647;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: u32 = 4294967295;
pub const UINT_FAST32_MAX: u32 = 4294967295;
pub const INTPTR_MIN: i32 = -2147483648;
pub const INTPTR_MAX: u32 = 2147483647;
pub const UINTPTR_MAX: u32 = 4294967295;
pub const PTRDIFF_MIN: i32 = -2147483648;
pub const PTRDIFF_MAX: u32 = 2147483647;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const SIZE_MAX: u32 = 4294967295;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 4294967295;
pub const LIMINE_MEDIA_TYPE_GENERIC: u32 = 0;
pub const LIMINE_MEDIA_TYPE_OPTICAL: u32 = 1;
pub const LIMINE_MEDIA_TYPE_TFTP: u32 = 2;
pub const LIMINE_FIRMWARE_TYPE_X86BIOS: u32 = 0;
pub const LIMINE_FIRMWARE_TYPE_UEFI32: u32 = 1;
pub const LIMINE_FIRMWARE_TYPE_UEFI64: u32 = 2;
pub const LIMINE_FRAMEBUFFER_RGB: u32 = 1;
pub const LIMINE_TERMINAL_CB_DEC: u32 = 10;
pub const LIMINE_TERMINAL_CB_BELL: u32 = 20;
pub const LIMINE_TERMINAL_CB_PRIVATE_ID: u32 = 30;
pub const LIMINE_TERMINAL_CB_STATUS_REPORT: u32 = 40;
pub const LIMINE_TERMINAL_CB_POS_REPORT: u32 = 50;
pub const LIMINE_TERMINAL_CB_KBD_LEDS: u32 = 60;
pub const LIMINE_TERMINAL_CB_MODE: u32 = 70;
pub const LIMINE_TERMINAL_CB_LINUX: u32 = 80;
pub const LIMINE_TERMINAL_OOB_OUTPUT_OCRNL: u32 = 1;
pub const LIMINE_TERMINAL_OOB_OUTPUT_OFDEL: u32 = 2;
pub const LIMINE_TERMINAL_OOB_OUTPUT_OFILL: u32 = 4;
pub const LIMINE_TERMINAL_OOB_OUTPUT_OLCUC: u32 = 8;
pub const LIMINE_TERMINAL_OOB_OUTPUT_ONLCR: u32 = 16;
pub const LIMINE_TERMINAL_OOB_OUTPUT_ONLRET: u32 = 32;
pub const LIMINE_TERMINAL_OOB_OUTPUT_ONOCR: u32 = 64;
pub const LIMINE_TERMINAL_OOB_OUTPUT_OPOST: u32 = 128;
pub const LIMINE_PAGING_MODE_AARCH64_4LVL: u32 = 0;
pub const LIMINE_PAGING_MODE_AARCH64_5LVL: u32 = 1;
pub const LIMINE_PAGING_MODE_MAX: u32 = 1;
pub const LIMINE_PAGING_MODE_MIN: u32 = 0;
pub const LIMINE_PAGING_MODE_DEFAULT: u32 = 0;
pub const LIMINE_MEMMAP_USABLE: u32 = 0;
pub const LIMINE_MEMMAP_RESERVED: u32 = 1;
pub const LIMINE_MEMMAP_ACPI_RECLAIMABLE: u32 = 2;
pub const LIMINE_MEMMAP_ACPI_NVS: u32 = 3;
pub const LIMINE_MEMMAP_BAD_MEMORY: u32 = 4;
pub const LIMINE_MEMMAP_BOOTLOADER_RECLAIMABLE: u32 = 5;
pub const LIMINE_MEMMAP_KERNEL_AND_MODULES: u32 = 6;
pub const LIMINE_MEMMAP_FRAMEBUFFER: u32 = 7;
pub const LIMINE_INTERNAL_MODULE_REQUIRED: u32 = 1;
pub const LIMINE_INTERNAL_MODULE_COMPRESSED: u32 = 2;
pub type __u_char = ::core::ffi::c_uchar;
pub type __u_short = ::core::ffi::c_ushort;
pub type __u_int = ::core::ffi::c_uint;
pub type __u_long = ::core::ffi::c_ulong;
pub type __int8_t = ::core::ffi::c_schar;
pub type __uint8_t = ::core::ffi::c_uchar;
pub type __int16_t = ::core::ffi::c_short;
pub type __uint16_t = ::core::ffi::c_ushort;
pub type __int32_t = ::core::ffi::c_int;
pub type __uint32_t = ::core::ffi::c_uint;
pub type __int64_t = ::core::ffi::c_longlong;
pub type __uint64_t = ::core::ffi::c_ulonglong;
pub type __int_least8_t = __int8_t;
pub type __uint_least8_t = __uint8_t;
pub type __int_least16_t = __int16_t;
pub type __uint_least16_t = __uint16_t;
pub type __int_least32_t = __int32_t;
pub type __uint_least32_t = __uint32_t;
pub type __int_least64_t = __int64_t;
pub type __uint_least64_t = __uint64_t;
pub type __quad_t = ::core::ffi::c_longlong;
pub type __u_quad_t = ::core::ffi::c_ulonglong;
pub type __intmax_t = ::core::ffi::c_longlong;
pub type __uintmax_t = ::core::ffi::c_ulonglong;
pub type __dev_t = __uint64_t;
pub type __uid_t = ::core::ffi::c_uint;
pub type __gid_t = ::core::ffi::c_uint;
pub type __ino_t = ::core::ffi::c_ulong;
pub type __ino64_t = __uint64_t;
pub type __mode_t = ::core::ffi::c_uint;
pub type __nlink_t = ::core::ffi::c_uint;
pub type __off_t = ::core::ffi::c_long;
pub type __off64_t = __int64_t;
pub type __pid_t = ::core::ffi::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __fsid_t {
    pub __val: [::core::ffi::c_int; 2usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __fsid_t"][::core::mem::size_of::<__fsid_t>() - 8usize];
    ["Alignment of __fsid_t"][::core::mem::align_of::<__fsid_t>() - 4usize];
    ["Offset of field: __fsid_t::__val"][::core::mem::offset_of!(__fsid_t, __val) - 0usize];
};
pub type __clock_t = ::core::ffi::c_long;
pub type __rlim_t = ::core::ffi::c_ulong;
pub type __rlim64_t = __uint64_t;
pub type __id_t = ::core::ffi::c_uint;
pub type __time_t = ::core::ffi::c_long;
pub type __useconds_t = ::core::ffi::c_uint;
pub type __suseconds_t = ::core::ffi::c_long;
pub type __suseconds64_t = __int64_t;
pub type __daddr_t = ::core::ffi::c_int;
pub type __key_t = ::core::ffi::c_int;
pub type __clockid_t = ::core::ffi::c_int;
pub type __timer_t = *mut ::core::ffi::c_void;
pub type __blksize_t = ::core::ffi::c_long;
pub type __blkcnt_t = ::core::ffi::c_long;
pub type __blkcnt64_t = __int64_t;
pub type __fsblkcnt_t = ::core::ffi::c_ulong;
pub type __fsblkcnt64_t = __uint64_t;
pub type __fsfilcnt_t = ::core::ffi::c_ulong;
pub type __fsfilcnt64_t = __uint64_t;
pub type __fsword_t = ::core::ffi::c_int;
pub type __ssize_t = ::core::ffi::c_int;
pub type __syscall_slong_t = ::core::ffi::c_long;
pub type __syscall_ulong_t = ::core::ffi::c_ulong;
pub type __loff_t = __off64_t;
pub type __caddr_t = *mut ::core::ffi::c_char;
pub type __intptr_t = ::core::ffi::c_int;
pub type __socklen_t = ::core::ffi::c_uint;
pub type __sig_atomic_t = ::core::ffi::c_int;
pub type __time64_t = __int64_t;
pub type int_least8_t = __int_least8_t;
pub type int_least16_t = __int_least16_t;
pub type int_least32_t = __int_least32_t;
pub type int_least64_t = __int_least64_t;
pub type uint_least8_t = __uint_least8_t;
pub type uint_least16_t = __uint_least16_t;
pub type uint_least32_t = __uint_least32_t;
pub type uint_least64_t = __uint_least64_t;
pub type int_fast8_t = ::core::ffi::c_schar;
pub type int_fast16_t = ::core::ffi::c_int;
pub type int_fast32_t = ::core::ffi::c_int;
pub type int_fast64_t = ::core::ffi::c_longlong;
pub type uint_fast8_t = ::core::ffi::c_uchar;
pub type uint_fast16_t = ::core::ffi::c_uint;
pub type uint_fast32_t = ::core::ffi::c_uint;
pub type uint_fast64_t = ::core::ffi::c_ulonglong;
pub type intmax_t = __intmax_t;
pub type uintmax_t = __uintmax_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_uuid {
    pub a: u32,
    pub b: u16,
    pub c: u16,
    pub d: [u8; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_uuid"][::core::mem::size_of::<limine_uuid>() - 16usize];
    ["Alignment of limine_uuid"][::core::mem::align_of::<limine_uuid>() - 4usize];
    ["Offset of field: limine_uuid::a"][::core::mem::offset_of!(limine_uuid, a) - 0usize];
    ["Offset of field: limine_uuid::b"][::core::mem::offset_of!(limine_uuid, b) - 4usize];
    ["Offset of field: limine_uuid::c"][::core::mem::offset_of!(limine_uuid, c) - 6usize];
    ["Offset of field: limine_uuid::d"][::core::mem::offset_of!(limine_uuid, d) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_file {
    pub revision: u64,
    pub address: *mut ::core::ffi::c_void,
    pub size: u64,
    pub path: *mut ::core::ffi::c_char,
    pub cmdline: *mut ::core::ffi::c_char,
    pub media_type: u32,
    pub unused: u32,
    pub tftp_ip: u32,
    pub tftp_port: u32,
    pub partition_index: u32,
    pub mbr_disk_id: u32,
    pub gpt_disk_uuid: limine_uuid,
    pub gpt_part_uuid: limine_uuid,
    pub part_uuid: limine_uuid,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_file"][::core::mem::size_of::<limine_file>() - 112usize];
    ["Alignment of limine_file"][::core::mem::align_of::<limine_file>() - 8usize];
    ["Offset of field: limine_file::revision"]
        [::core::mem::offset_of!(limine_file, revision) - 0usize];
    ["Offset of field: limine_file::address"]
        [::core::mem::offset_of!(limine_file, address) - 8usize];
    ["Offset of field: limine_file::size"][::core::mem::offset_of!(limine_file, size) - 16usize];
    ["Offset of field: limine_file::path"][::core::mem::offset_of!(limine_file, path) - 24usize];
    ["Offset of field: limine_file::cmdline"]
        [::core::mem::offset_of!(limine_file, cmdline) - 32usize];
    ["Offset of field: limine_file::media_type"]
        [::core::mem::offset_of!(limine_file, media_type) - 40usize];
    ["Offset of field: limine_file::unused"]
        [::core::mem::offset_of!(limine_file, unused) - 44usize];
    ["Offset of field: limine_file::tftp_ip"]
        [::core::mem::offset_of!(limine_file, tftp_ip) - 48usize];
    ["Offset of field: limine_file::tftp_port"]
        [::core::mem::offset_of!(limine_file, tftp_port) - 52usize];
    ["Offset of field: limine_file::partition_index"]
        [::core::mem::offset_of!(limine_file, partition_index) - 56usize];
    ["Offset of field: limine_file::mbr_disk_id"]
        [::core::mem::offset_of!(limine_file, mbr_disk_id) - 60usize];
    ["Offset of field: limine_file::gpt_disk_uuid"]
        [::core::mem::offset_of!(limine_file, gpt_disk_uuid) - 64usize];
    ["Offset of field: limine_file::gpt_part_uuid"]
        [::core::mem::offset_of!(limine_file, gpt_part_uuid) - 80usize];
    ["Offset of field: limine_file::part_uuid"]
        [::core::mem::offset_of!(limine_file, part_uuid) - 96usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_bootloader_info_response {
    pub revision: u64,
    pub name: *mut ::core::ffi::c_char,
    pub version: *mut ::core::ffi::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_bootloader_info_response"]
        [::core::mem::size_of::<limine_bootloader_info_response>() - 24usize];
    ["Alignment of limine_bootloader_info_response"]
        [::core::mem::align_of::<limine_bootloader_info_response>() - 8usize];
    ["Offset of field: limine_bootloader_info_response::revision"]
        [::core::mem::offset_of!(limine_bootloader_info_response, revision) - 0usize];
    ["Offset of field: limine_bootloader_info_response::name"]
        [::core::mem::offset_of!(limine_bootloader_info_response, name) - 8usize];
    ["Offset of field: limine_bootloader_info_response::version"]
        [::core::mem::offset_of!(limine_bootloader_info_response, version) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_bootloader_info_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_bootloader_info_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_bootloader_info_request"]
        [::core::mem::size_of::<limine_bootloader_info_request>() - 48usize];
    ["Alignment of limine_bootloader_info_request"]
        [::core::mem::align_of::<limine_bootloader_info_request>() - 8usize];
    ["Offset of field: limine_bootloader_info_request::id"]
        [::core::mem::offset_of!(limine_bootloader_info_request, id) - 0usize];
    ["Offset of field: limine_bootloader_info_request::revision"]
        [::core::mem::offset_of!(limine_bootloader_info_request, revision) - 32usize];
    ["Offset of field: limine_bootloader_info_request::response"]
        [::core::mem::offset_of!(limine_bootloader_info_request, response) - 40usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_firmware_type_response {
    pub revision: u64,
    pub firmware_type: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_firmware_type_response"]
        [::core::mem::size_of::<limine_firmware_type_response>() - 16usize];
    ["Alignment of limine_firmware_type_response"]
        [::core::mem::align_of::<limine_firmware_type_response>() - 8usize];
    ["Offset of field: limine_firmware_type_response::revision"]
        [::core::mem::offset_of!(limine_firmware_type_response, revision) - 0usize];
    ["Offset of field: limine_firmware_type_response::firmware_type"]
        [::core::mem::offset_of!(limine_firmware_type_response, firmware_type) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_firmware_type_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_firmware_type_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_firmware_type_request"]
        [::core::mem::size_of::<limine_firmware_type_request>() - 48usize];
    ["Alignment of limine_firmware_type_request"]
        [::core::mem::align_of::<limine_firmware_type_request>() - 8usize];
    ["Offset of field: limine_firmware_type_request::id"]
        [::core::mem::offset_of!(limine_firmware_type_request, id) - 0usize];
    ["Offset of field: limine_firmware_type_request::revision"]
        [::core::mem::offset_of!(limine_firmware_type_request, revision) - 32usize];
    ["Offset of field: limine_firmware_type_request::response"]
        [::core::mem::offset_of!(limine_firmware_type_request, response) - 40usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_stack_size_response {
    pub revision: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_stack_size_response"]
        [::core::mem::size_of::<limine_stack_size_response>() - 8usize];
    ["Alignment of limine_stack_size_response"]
        [::core::mem::align_of::<limine_stack_size_response>() - 8usize];
    ["Offset of field: limine_stack_size_response::revision"]
        [::core::mem::offset_of!(limine_stack_size_response, revision) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_stack_size_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_stack_size_response,
    pub stack_size: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_stack_size_request"]
        [::core::mem::size_of::<limine_stack_size_request>() - 56usize];
    ["Alignment of limine_stack_size_request"]
        [::core::mem::align_of::<limine_stack_size_request>() - 8usize];
    ["Offset of field: limine_stack_size_request::id"]
        [::core::mem::offset_of!(limine_stack_size_request, id) - 0usize];
    ["Offset of field: limine_stack_size_request::revision"]
        [::core::mem::offset_of!(limine_stack_size_request, revision) - 32usize];
    ["Offset of field: limine_stack_size_request::response"]
        [::core::mem::offset_of!(limine_stack_size_request, response) - 40usize];
    ["Offset of field: limine_stack_size_request::stack_size"]
        [::core::mem::offset_of!(limine_stack_size_request, stack_size) - 48usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_hhdm_response {
    pub revision: u64,
    pub offset: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_hhdm_response"][::core::mem::size_of::<limine_hhdm_response>() - 16usize];
    ["Alignment of limine_hhdm_response"][::core::mem::align_of::<limine_hhdm_response>() - 8usize];
    ["Offset of field: limine_hhdm_response::revision"]
        [::core::mem::offset_of!(limine_hhdm_response, revision) - 0usize];
    ["Offset of field: limine_hhdm_response::offset"]
        [::core::mem::offset_of!(limine_hhdm_response, offset) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_hhdm_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_hhdm_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_hhdm_request"][::core::mem::size_of::<limine_hhdm_request>() - 48usize];
    ["Alignment of limine_hhdm_request"][::core::mem::align_of::<limine_hhdm_request>() - 8usize];
    ["Offset of field: limine_hhdm_request::id"]
        [::core::mem::offset_of!(limine_hhdm_request, id) - 0usize];
    ["Offset of field: limine_hhdm_request::revision"]
        [::core::mem::offset_of!(limine_hhdm_request, revision) - 32usize];
    ["Offset of field: limine_hhdm_request::response"]
        [::core::mem::offset_of!(limine_hhdm_request, response) - 40usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_video_mode {
    pub pitch: u64,
    pub width: u64,
    pub height: u64,
    pub bpp: u16,
    pub memory_model: u8,
    pub red_mask_size: u8,
    pub red_mask_shift: u8,
    pub green_mask_size: u8,
    pub green_mask_shift: u8,
    pub blue_mask_size: u8,
    pub blue_mask_shift: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_video_mode"][::core::mem::size_of::<limine_video_mode>() - 40usize];
    ["Alignment of limine_video_mode"][::core::mem::align_of::<limine_video_mode>() - 8usize];
    ["Offset of field: limine_video_mode::pitch"]
        [::core::mem::offset_of!(limine_video_mode, pitch) - 0usize];
    ["Offset of field: limine_video_mode::width"]
        [::core::mem::offset_of!(limine_video_mode, width) - 8usize];
    ["Offset of field: limine_video_mode::height"]
        [::core::mem::offset_of!(limine_video_mode, height) - 16usize];
    ["Offset of field: limine_video_mode::bpp"]
        [::core::mem::offset_of!(limine_video_mode, bpp) - 24usize];
    ["Offset of field: limine_video_mode::memory_model"]
        [::core::mem::offset_of!(limine_video_mode, memory_model) - 26usize];
    ["Offset of field: limine_video_mode::red_mask_size"]
        [::core::mem::offset_of!(limine_video_mode, red_mask_size) - 27usize];
    ["Offset of field: limine_video_mode::red_mask_shift"]
        [::core::mem::offset_of!(limine_video_mode, red_mask_shift) - 28usize];
    ["Offset of field: limine_video_mode::green_mask_size"]
        [::core::mem::offset_of!(limine_video_mode, green_mask_size) - 29usize];
    ["Offset of field: limine_video_mode::green_mask_shift"]
        [::core::mem::offset_of!(limine_video_mode, green_mask_shift) - 30usize];
    ["Offset of field: limine_video_mode::blue_mask_size"]
        [::core::mem::offset_of!(limine_video_mode, blue_mask_size) - 31usize];
    ["Offset of field: limine_video_mode::blue_mask_shift"]
        [::core::mem::offset_of!(limine_video_mode, blue_mask_shift) - 32usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_framebuffer {
    pub address: *mut ::core::ffi::c_void,
    pub width: u64,
    pub height: u64,
    pub pitch: u64,
    pub bpp: u16,
    pub memory_model: u8,
    pub red_mask_size: u8,
    pub red_mask_shift: u8,
    pub green_mask_size: u8,
    pub green_mask_shift: u8,
    pub blue_mask_size: u8,
    pub blue_mask_shift: u8,
    pub unused: [u8; 7usize],
    pub edid_size: u64,
    pub edid: *mut ::core::ffi::c_void,
    pub mode_count: u64,
    pub modes: *mut *mut limine_video_mode,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_framebuffer"][::core::mem::size_of::<limine_framebuffer>() - 80usize];
    ["Alignment of limine_framebuffer"][::core::mem::align_of::<limine_framebuffer>() - 8usize];
    ["Offset of field: limine_framebuffer::address"]
        [::core::mem::offset_of!(limine_framebuffer, address) - 0usize];
    ["Offset of field: limine_framebuffer::width"]
        [::core::mem::offset_of!(limine_framebuffer, width) - 8usize];
    ["Offset of field: limine_framebuffer::height"]
        [::core::mem::offset_of!(limine_framebuffer, height) - 16usize];
    ["Offset of field: limine_framebuffer::pitch"]
        [::core::mem::offset_of!(limine_framebuffer, pitch) - 24usize];
    ["Offset of field: limine_framebuffer::bpp"]
        [::core::mem::offset_of!(limine_framebuffer, bpp) - 32usize];
    ["Offset of field: limine_framebuffer::memory_model"]
        [::core::mem::offset_of!(limine_framebuffer, memory_model) - 34usize];
    ["Offset of field: limine_framebuffer::red_mask_size"]
        [::core::mem::offset_of!(limine_framebuffer, red_mask_size) - 35usize];
    ["Offset of field: limine_framebuffer::red_mask_shift"]
        [::core::mem::offset_of!(limine_framebuffer, red_mask_shift) - 36usize];
    ["Offset of field: limine_framebuffer::green_mask_size"]
        [::core::mem::offset_of!(limine_framebuffer, green_mask_size) - 37usize];
    ["Offset of field: limine_framebuffer::green_mask_shift"]
        [::core::mem::offset_of!(limine_framebuffer, green_mask_shift) - 38usize];
    ["Offset of field: limine_framebuffer::blue_mask_size"]
        [::core::mem::offset_of!(limine_framebuffer, blue_mask_size) - 39usize];
    ["Offset of field: limine_framebuffer::blue_mask_shift"]
        [::core::mem::offset_of!(limine_framebuffer, blue_mask_shift) - 40usize];
    ["Offset of field: limine_framebuffer::unused"]
        [::core::mem::offset_of!(limine_framebuffer, unused) - 41usize];
    ["Offset of field: limine_framebuffer::edid_size"]
        [::core::mem::offset_of!(limine_framebuffer, edid_size) - 48usize];
    ["Offset of field: limine_framebuffer::edid"]
        [::core::mem::offset_of!(limine_framebuffer, edid) - 56usize];
    ["Offset of field: limine_framebuffer::mode_count"]
        [::core::mem::offset_of!(limine_framebuffer, mode_count) - 64usize];
    ["Offset of field: limine_framebuffer::modes"]
        [::core::mem::offset_of!(limine_framebuffer, modes) - 72usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_framebuffer_response {
    pub revision: u64,
    pub framebuffer_count: u64,
    pub framebuffers: *mut *mut limine_framebuffer,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_framebuffer_response"]
        [::core::mem::size_of::<limine_framebuffer_response>() - 24usize];
    ["Alignment of limine_framebuffer_response"]
        [::core::mem::align_of::<limine_framebuffer_response>() - 8usize];
    ["Offset of field: limine_framebuffer_response::revision"]
        [::core::mem::offset_of!(limine_framebuffer_response, revision) - 0usize];
    ["Offset of field: limine_framebuffer_response::framebuffer_count"]
        [::core::mem::offset_of!(limine_framebuffer_response, framebuffer_count) - 8usize];
    ["Offset of field: limine_framebuffer_response::framebuffers"]
        [::core::mem::offset_of!(limine_framebuffer_response, framebuffers) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_framebuffer_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_framebuffer_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_framebuffer_request"]
        [::core::mem::size_of::<limine_framebuffer_request>() - 48usize];
    ["Alignment of limine_framebuffer_request"]
        [::core::mem::align_of::<limine_framebuffer_request>() - 8usize];
    ["Offset of field: limine_framebuffer_request::id"]
        [::core::mem::offset_of!(limine_framebuffer_request, id) - 0usize];
    ["Offset of field: limine_framebuffer_request::revision"]
        [::core::mem::offset_of!(limine_framebuffer_request, revision) - 32usize];
    ["Offset of field: limine_framebuffer_request::response"]
        [::core::mem::offset_of!(limine_framebuffer_request, response) - 40usize];
};
pub type limine_terminal_write = ::core::option::Option<
    unsafe extern "C" fn(arg1: *mut limine_terminal, arg2: *const ::core::ffi::c_char, arg3: u64),
>;
pub type limine_terminal_callback = ::core::option::Option<
    unsafe extern "C" fn(arg1: *mut limine_terminal, arg2: u64, arg3: u64, arg4: u64, arg5: u64),
>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_terminal {
    pub columns: u64,
    pub rows: u64,
    pub framebuffer: *mut limine_framebuffer,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_terminal"][::core::mem::size_of::<limine_terminal>() - 24usize];
    ["Alignment of limine_terminal"][::core::mem::align_of::<limine_terminal>() - 8usize];
    ["Offset of field: limine_terminal::columns"]
        [::core::mem::offset_of!(limine_terminal, columns) - 0usize];
    ["Offset of field: limine_terminal::rows"]
        [::core::mem::offset_of!(limine_terminal, rows) - 8usize];
    ["Offset of field: limine_terminal::framebuffer"]
        [::core::mem::offset_of!(limine_terminal, framebuffer) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_terminal_response {
    pub revision: u64,
    pub terminal_count: u64,
    pub terminals: *mut *mut limine_terminal,
    pub write: limine_terminal_write,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_terminal_response"]
        [::core::mem::size_of::<limine_terminal_response>() - 32usize];
    ["Alignment of limine_terminal_response"]
        [::core::mem::align_of::<limine_terminal_response>() - 8usize];
    ["Offset of field: limine_terminal_response::revision"]
        [::core::mem::offset_of!(limine_terminal_response, revision) - 0usize];
    ["Offset of field: limine_terminal_response::terminal_count"]
        [::core::mem::offset_of!(limine_terminal_response, terminal_count) - 8usize];
    ["Offset of field: limine_terminal_response::terminals"]
        [::core::mem::offset_of!(limine_terminal_response, terminals) - 16usize];
    ["Offset of field: limine_terminal_response::write"]
        [::core::mem::offset_of!(limine_terminal_response, write) - 24usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_terminal_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_terminal_response,
    pub callback: limine_terminal_callback,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_terminal_request"]
        [::core::mem::size_of::<limine_terminal_request>() - 56usize];
    ["Alignment of limine_terminal_request"]
        [::core::mem::align_of::<limine_terminal_request>() - 8usize];
    ["Offset of field: limine_terminal_request::id"]
        [::core::mem::offset_of!(limine_terminal_request, id) - 0usize];
    ["Offset of field: limine_terminal_request::revision"]
        [::core::mem::offset_of!(limine_terminal_request, revision) - 32usize];
    ["Offset of field: limine_terminal_request::response"]
        [::core::mem::offset_of!(limine_terminal_request, response) - 40usize];
    ["Offset of field: limine_terminal_request::callback"]
        [::core::mem::offset_of!(limine_terminal_request, callback) - 48usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_paging_mode_response {
    pub revision: u64,
    pub mode: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_paging_mode_response"]
        [::core::mem::size_of::<limine_paging_mode_response>() - 16usize];
    ["Alignment of limine_paging_mode_response"]
        [::core::mem::align_of::<limine_paging_mode_response>() - 8usize];
    ["Offset of field: limine_paging_mode_response::revision"]
        [::core::mem::offset_of!(limine_paging_mode_response, revision) - 0usize];
    ["Offset of field: limine_paging_mode_response::mode"]
        [::core::mem::offset_of!(limine_paging_mode_response, mode) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_paging_mode_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_paging_mode_response,
    pub mode: u64,
    pub max_mode: u64,
    pub min_mode: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_paging_mode_request"]
        [::core::mem::size_of::<limine_paging_mode_request>() - 72usize];
    ["Alignment of limine_paging_mode_request"]
        [::core::mem::align_of::<limine_paging_mode_request>() - 8usize];
    ["Offset of field: limine_paging_mode_request::id"]
        [::core::mem::offset_of!(limine_paging_mode_request, id) - 0usize];
    ["Offset of field: limine_paging_mode_request::revision"]
        [::core::mem::offset_of!(limine_paging_mode_request, revision) - 32usize];
    ["Offset of field: limine_paging_mode_request::response"]
        [::core::mem::offset_of!(limine_paging_mode_request, response) - 40usize];
    ["Offset of field: limine_paging_mode_request::mode"]
        [::core::mem::offset_of!(limine_paging_mode_request, mode) - 48usize];
    ["Offset of field: limine_paging_mode_request::max_mode"]
        [::core::mem::offset_of!(limine_paging_mode_request, max_mode) - 56usize];
    ["Offset of field: limine_paging_mode_request::min_mode"]
        [::core::mem::offset_of!(limine_paging_mode_request, min_mode) - 64usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_5_level_paging_response {
    pub revision: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_5_level_paging_response"]
        [::core::mem::size_of::<limine_5_level_paging_response>() - 8usize];
    ["Alignment of limine_5_level_paging_response"]
        [::core::mem::align_of::<limine_5_level_paging_response>() - 8usize];
    ["Offset of field: limine_5_level_paging_response::revision"]
        [::core::mem::offset_of!(limine_5_level_paging_response, revision) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_5_level_paging_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_5_level_paging_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_5_level_paging_request"]
        [::core::mem::size_of::<limine_5_level_paging_request>() - 48usize];
    ["Alignment of limine_5_level_paging_request"]
        [::core::mem::align_of::<limine_5_level_paging_request>() - 8usize];
    ["Offset of field: limine_5_level_paging_request::id"]
        [::core::mem::offset_of!(limine_5_level_paging_request, id) - 0usize];
    ["Offset of field: limine_5_level_paging_request::revision"]
        [::core::mem::offset_of!(limine_5_level_paging_request, revision) - 32usize];
    ["Offset of field: limine_5_level_paging_request::response"]
        [::core::mem::offset_of!(limine_5_level_paging_request, response) - 40usize];
};
pub type limine_goto_address =
    ::core::option::Option<unsafe extern "C" fn(arg1: *mut limine_smp_info)>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_smp_info {
    pub processor_id: u32,
    pub reserved1: u32,
    pub mpidr: u64,
    pub reserved: u64,
    pub goto_address: limine_goto_address,
    pub extra_argument: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_smp_info"][::core::mem::size_of::<limine_smp_info>() - 40usize];
    ["Alignment of limine_smp_info"][::core::mem::align_of::<limine_smp_info>() - 8usize];
    ["Offset of field: limine_smp_info::processor_id"]
        [::core::mem::offset_of!(limine_smp_info, processor_id) - 0usize];
    ["Offset of field: limine_smp_info::reserved1"]
        [::core::mem::offset_of!(limine_smp_info, reserved1) - 4usize];
    ["Offset of field: limine_smp_info::mpidr"]
        [::core::mem::offset_of!(limine_smp_info, mpidr) - 8usize];
    ["Offset of field: limine_smp_info::reserved"]
        [::core::mem::offset_of!(limine_smp_info, reserved) - 16usize];
    ["Offset of field: limine_smp_info::goto_address"]
        [::core::mem::offset_of!(limine_smp_info, goto_address) - 24usize];
    ["Offset of field: limine_smp_info::extra_argument"]
        [::core::mem::offset_of!(limine_smp_info, extra_argument) - 32usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_smp_response {
    pub revision: u64,
    pub flags: u64,
    pub bsp_mpidr: u64,
    pub cpu_count: u64,
    pub cpus: *mut *mut limine_smp_info,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_smp_response"][::core::mem::size_of::<limine_smp_response>() - 40usize];
    ["Alignment of limine_smp_response"][::core::mem::align_of::<limine_smp_response>() - 8usize];
    ["Offset of field: limine_smp_response::revision"]
        [::core::mem::offset_of!(limine_smp_response, revision) - 0usize];
    ["Offset of field: limine_smp_response::flags"]
        [::core::mem::offset_of!(limine_smp_response, flags) - 8usize];
    ["Offset of field: limine_smp_response::bsp_mpidr"]
        [::core::mem::offset_of!(limine_smp_response, bsp_mpidr) - 16usize];
    ["Offset of field: limine_smp_response::cpu_count"]
        [::core::mem::offset_of!(limine_smp_response, cpu_count) - 24usize];
    ["Offset of field: limine_smp_response::cpus"]
        [::core::mem::offset_of!(limine_smp_response, cpus) - 32usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_smp_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_smp_response,
    pub flags: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_smp_request"][::core::mem::size_of::<limine_smp_request>() - 56usize];
    ["Alignment of limine_smp_request"][::core::mem::align_of::<limine_smp_request>() - 8usize];
    ["Offset of field: limine_smp_request::id"]
        [::core::mem::offset_of!(limine_smp_request, id) - 0usize];
    ["Offset of field: limine_smp_request::revision"]
        [::core::mem::offset_of!(limine_smp_request, revision) - 32usize];
    ["Offset of field: limine_smp_request::response"]
        [::core::mem::offset_of!(limine_smp_request, response) - 40usize];
    ["Offset of field: limine_smp_request::flags"]
        [::core::mem::offset_of!(limine_smp_request, flags) - 48usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_memmap_entry {
    pub base: u64,
    pub length: u64,
    pub type_: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_memmap_entry"][::core::mem::size_of::<limine_memmap_entry>() - 24usize];
    ["Alignment of limine_memmap_entry"][::core::mem::align_of::<limine_memmap_entry>() - 8usize];
    ["Offset of field: limine_memmap_entry::base"]
        [::core::mem::offset_of!(limine_memmap_entry, base) - 0usize];
    ["Offset of field: limine_memmap_entry::length"]
        [::core::mem::offset_of!(limine_memmap_entry, length) - 8usize];
    ["Offset of field: limine_memmap_entry::type_"]
        [::core::mem::offset_of!(limine_memmap_entry, type_) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_memmap_response {
    pub revision: u64,
    pub entry_count: u64,
    pub entries: *mut *mut limine_memmap_entry,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_memmap_response"][::core::mem::size_of::<limine_memmap_response>() - 24usize];
    ["Alignment of limine_memmap_response"]
        [::core::mem::align_of::<limine_memmap_response>() - 8usize];
    ["Offset of field: limine_memmap_response::revision"]
        [::core::mem::offset_of!(limine_memmap_response, revision) - 0usize];
    ["Offset of field: limine_memmap_response::entry_count"]
        [::core::mem::offset_of!(limine_memmap_response, entry_count) - 8usize];
    ["Offset of field: limine_memmap_response::entries"]
        [::core::mem::offset_of!(limine_memmap_response, entries) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_memmap_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_memmap_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_memmap_request"][::core::mem::size_of::<limine_memmap_request>() - 48usize];
    ["Alignment of limine_memmap_request"]
        [::core::mem::align_of::<limine_memmap_request>() - 8usize];
    ["Offset of field: limine_memmap_request::id"]
        [::core::mem::offset_of!(limine_memmap_request, id) - 0usize];
    ["Offset of field: limine_memmap_request::revision"]
        [::core::mem::offset_of!(limine_memmap_request, revision) - 32usize];
    ["Offset of field: limine_memmap_request::response"]
        [::core::mem::offset_of!(limine_memmap_request, response) - 40usize];
};
pub type limine_entry_point = ::core::option::Option<unsafe extern "C" fn()>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_entry_point_response {
    pub revision: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_entry_point_response"]
        [::core::mem::size_of::<limine_entry_point_response>() - 8usize];
    ["Alignment of limine_entry_point_response"]
        [::core::mem::align_of::<limine_entry_point_response>() - 8usize];
    ["Offset of field: limine_entry_point_response::revision"]
        [::core::mem::offset_of!(limine_entry_point_response, revision) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_entry_point_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_entry_point_response,
    pub entry: limine_entry_point,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_entry_point_request"]
        [::core::mem::size_of::<limine_entry_point_request>() - 56usize];
    ["Alignment of limine_entry_point_request"]
        [::core::mem::align_of::<limine_entry_point_request>() - 8usize];
    ["Offset of field: limine_entry_point_request::id"]
        [::core::mem::offset_of!(limine_entry_point_request, id) - 0usize];
    ["Offset of field: limine_entry_point_request::revision"]
        [::core::mem::offset_of!(limine_entry_point_request, revision) - 32usize];
    ["Offset of field: limine_entry_point_request::response"]
        [::core::mem::offset_of!(limine_entry_point_request, response) - 40usize];
    ["Offset of field: limine_entry_point_request::entry"]
        [::core::mem::offset_of!(limine_entry_point_request, entry) - 48usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_kernel_file_response {
    pub revision: u64,
    pub kernel_file: *mut limine_file,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_kernel_file_response"]
        [::core::mem::size_of::<limine_kernel_file_response>() - 16usize];
    ["Alignment of limine_kernel_file_response"]
        [::core::mem::align_of::<limine_kernel_file_response>() - 8usize];
    ["Offset of field: limine_kernel_file_response::revision"]
        [::core::mem::offset_of!(limine_kernel_file_response, revision) - 0usize];
    ["Offset of field: limine_kernel_file_response::kernel_file"]
        [::core::mem::offset_of!(limine_kernel_file_response, kernel_file) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_kernel_file_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_kernel_file_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_kernel_file_request"]
        [::core::mem::size_of::<limine_kernel_file_request>() - 48usize];
    ["Alignment of limine_kernel_file_request"]
        [::core::mem::align_of::<limine_kernel_file_request>() - 8usize];
    ["Offset of field: limine_kernel_file_request::id"]
        [::core::mem::offset_of!(limine_kernel_file_request, id) - 0usize];
    ["Offset of field: limine_kernel_file_request::revision"]
        [::core::mem::offset_of!(limine_kernel_file_request, revision) - 32usize];
    ["Offset of field: limine_kernel_file_request::response"]
        [::core::mem::offset_of!(limine_kernel_file_request, response) - 40usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_internal_module {
    pub path: *const ::core::ffi::c_char,
    pub cmdline: *const ::core::ffi::c_char,
    pub flags: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_internal_module"][::core::mem::size_of::<limine_internal_module>() - 24usize];
    ["Alignment of limine_internal_module"]
        [::core::mem::align_of::<limine_internal_module>() - 8usize];
    ["Offset of field: limine_internal_module::path"]
        [::core::mem::offset_of!(limine_internal_module, path) - 0usize];
    ["Offset of field: limine_internal_module::cmdline"]
        [::core::mem::offset_of!(limine_internal_module, cmdline) - 8usize];
    ["Offset of field: limine_internal_module::flags"]
        [::core::mem::offset_of!(limine_internal_module, flags) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_module_response {
    pub revision: u64,
    pub module_count: u64,
    pub modules: *mut *mut limine_file,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_module_response"][::core::mem::size_of::<limine_module_response>() - 24usize];
    ["Alignment of limine_module_response"]
        [::core::mem::align_of::<limine_module_response>() - 8usize];
    ["Offset of field: limine_module_response::revision"]
        [::core::mem::offset_of!(limine_module_response, revision) - 0usize];
    ["Offset of field: limine_module_response::module_count"]
        [::core::mem::offset_of!(limine_module_response, module_count) - 8usize];
    ["Offset of field: limine_module_response::modules"]
        [::core::mem::offset_of!(limine_module_response, modules) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_module_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_module_response,
    pub internal_module_count: u64,
    pub internal_modules: *mut *mut limine_internal_module,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_module_request"][::core::mem::size_of::<limine_module_request>() - 64usize];
    ["Alignment of limine_module_request"]
        [::core::mem::align_of::<limine_module_request>() - 8usize];
    ["Offset of field: limine_module_request::id"]
        [::core::mem::offset_of!(limine_module_request, id) - 0usize];
    ["Offset of field: limine_module_request::revision"]
        [::core::mem::offset_of!(limine_module_request, revision) - 32usize];
    ["Offset of field: limine_module_request::response"]
        [::core::mem::offset_of!(limine_module_request, response) - 40usize];
    ["Offset of field: limine_module_request::internal_module_count"]
        [::core::mem::offset_of!(limine_module_request, internal_module_count) - 48usize];
    ["Offset of field: limine_module_request::internal_modules"]
        [::core::mem::offset_of!(limine_module_request, internal_modules) - 56usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_rsdp_response {
    pub revision: u64,
    pub address: *mut ::core::ffi::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_rsdp_response"][::core::mem::size_of::<limine_rsdp_response>() - 16usize];
    ["Alignment of limine_rsdp_response"][::core::mem::align_of::<limine_rsdp_response>() - 8usize];
    ["Offset of field: limine_rsdp_response::revision"]
        [::core::mem::offset_of!(limine_rsdp_response, revision) - 0usize];
    ["Offset of field: limine_rsdp_response::address"]
        [::core::mem::offset_of!(limine_rsdp_response, address) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_rsdp_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_rsdp_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_rsdp_request"][::core::mem::size_of::<limine_rsdp_request>() - 48usize];
    ["Alignment of limine_rsdp_request"][::core::mem::align_of::<limine_rsdp_request>() - 8usize];
    ["Offset of field: limine_rsdp_request::id"]
        [::core::mem::offset_of!(limine_rsdp_request, id) - 0usize];
    ["Offset of field: limine_rsdp_request::revision"]
        [::core::mem::offset_of!(limine_rsdp_request, revision) - 32usize];
    ["Offset of field: limine_rsdp_request::response"]
        [::core::mem::offset_of!(limine_rsdp_request, response) - 40usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_smbios_response {
    pub revision: u64,
    pub entry_32: *mut ::core::ffi::c_void,
    pub entry_64: *mut ::core::ffi::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_smbios_response"][::core::mem::size_of::<limine_smbios_response>() - 24usize];
    ["Alignment of limine_smbios_response"]
        [::core::mem::align_of::<limine_smbios_response>() - 8usize];
    ["Offset of field: limine_smbios_response::revision"]
        [::core::mem::offset_of!(limine_smbios_response, revision) - 0usize];
    ["Offset of field: limine_smbios_response::entry_32"]
        [::core::mem::offset_of!(limine_smbios_response, entry_32) - 8usize];
    ["Offset of field: limine_smbios_response::entry_64"]
        [::core::mem::offset_of!(limine_smbios_response, entry_64) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_smbios_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_smbios_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_smbios_request"][::core::mem::size_of::<limine_smbios_request>() - 48usize];
    ["Alignment of limine_smbios_request"]
        [::core::mem::align_of::<limine_smbios_request>() - 8usize];
    ["Offset of field: limine_smbios_request::id"]
        [::core::mem::offset_of!(limine_smbios_request, id) - 0usize];
    ["Offset of field: limine_smbios_request::revision"]
        [::core::mem::offset_of!(limine_smbios_request, revision) - 32usize];
    ["Offset of field: limine_smbios_request::response"]
        [::core::mem::offset_of!(limine_smbios_request, response) - 40usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_efi_system_table_response {
    pub revision: u64,
    pub address: *mut ::core::ffi::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_efi_system_table_response"]
        [::core::mem::size_of::<limine_efi_system_table_response>() - 16usize];
    ["Alignment of limine_efi_system_table_response"]
        [::core::mem::align_of::<limine_efi_system_table_response>() - 8usize];
    ["Offset of field: limine_efi_system_table_response::revision"]
        [::core::mem::offset_of!(limine_efi_system_table_response, revision) - 0usize];
    ["Offset of field: limine_efi_system_table_response::address"]
        [::core::mem::offset_of!(limine_efi_system_table_response, address) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_efi_system_table_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_efi_system_table_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_efi_system_table_request"]
        [::core::mem::size_of::<limine_efi_system_table_request>() - 48usize];
    ["Alignment of limine_efi_system_table_request"]
        [::core::mem::align_of::<limine_efi_system_table_request>() - 8usize];
    ["Offset of field: limine_efi_system_table_request::id"]
        [::core::mem::offset_of!(limine_efi_system_table_request, id) - 0usize];
    ["Offset of field: limine_efi_system_table_request::revision"]
        [::core::mem::offset_of!(limine_efi_system_table_request, revision) - 32usize];
    ["Offset of field: limine_efi_system_table_request::response"]
        [::core::mem::offset_of!(limine_efi_system_table_request, response) - 40usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_efi_memmap_response {
    pub revision: u64,
    pub memmap: *mut ::core::ffi::c_void,
    pub memmap_size: u64,
    pub desc_size: u64,
    pub desc_version: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_efi_memmap_response"]
        [::core::mem::size_of::<limine_efi_memmap_response>() - 40usize];
    ["Alignment of limine_efi_memmap_response"]
        [::core::mem::align_of::<limine_efi_memmap_response>() - 8usize];
    ["Offset of field: limine_efi_memmap_response::revision"]
        [::core::mem::offset_of!(limine_efi_memmap_response, revision) - 0usize];
    ["Offset of field: limine_efi_memmap_response::memmap"]
        [::core::mem::offset_of!(limine_efi_memmap_response, memmap) - 8usize];
    ["Offset of field: limine_efi_memmap_response::memmap_size"]
        [::core::mem::offset_of!(limine_efi_memmap_response, memmap_size) - 16usize];
    ["Offset of field: limine_efi_memmap_response::desc_size"]
        [::core::mem::offset_of!(limine_efi_memmap_response, desc_size) - 24usize];
    ["Offset of field: limine_efi_memmap_response::desc_version"]
        [::core::mem::offset_of!(limine_efi_memmap_response, desc_version) - 32usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_efi_memmap_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_efi_memmap_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_efi_memmap_request"]
        [::core::mem::size_of::<limine_efi_memmap_request>() - 48usize];
    ["Alignment of limine_efi_memmap_request"]
        [::core::mem::align_of::<limine_efi_memmap_request>() - 8usize];
    ["Offset of field: limine_efi_memmap_request::id"]
        [::core::mem::offset_of!(limine_efi_memmap_request, id) - 0usize];
    ["Offset of field: limine_efi_memmap_request::revision"]
        [::core::mem::offset_of!(limine_efi_memmap_request, revision) - 32usize];
    ["Offset of field: limine_efi_memmap_request::response"]
        [::core::mem::offset_of!(limine_efi_memmap_request, response) - 40usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_boot_time_response {
    pub revision: u64,
    pub boot_time: i64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_boot_time_response"]
        [::core::mem::size_of::<limine_boot_time_response>() - 16usize];
    ["Alignment of limine_boot_time_response"]
        [::core::mem::align_of::<limine_boot_time_response>() - 8usize];
    ["Offset of field: limine_boot_time_response::revision"]
        [::core::mem::offset_of!(limine_boot_time_response, revision) - 0usize];
    ["Offset of field: limine_boot_time_response::boot_time"]
        [::core::mem::offset_of!(limine_boot_time_response, boot_time) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_boot_time_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_boot_time_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_boot_time_request"]
        [::core::mem::size_of::<limine_boot_time_request>() - 48usize];
    ["Alignment of limine_boot_time_request"]
        [::core::mem::align_of::<limine_boot_time_request>() - 8usize];
    ["Offset of field: limine_boot_time_request::id"]
        [::core::mem::offset_of!(limine_boot_time_request, id) - 0usize];
    ["Offset of field: limine_boot_time_request::revision"]
        [::core::mem::offset_of!(limine_boot_time_request, revision) - 32usize];
    ["Offset of field: limine_boot_time_request::response"]
        [::core::mem::offset_of!(limine_boot_time_request, response) - 40usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_kernel_address_response {
    pub revision: u64,
    pub physical_base: u64,
    pub virtual_base: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_kernel_address_response"]
        [::core::mem::size_of::<limine_kernel_address_response>() - 24usize];
    ["Alignment of limine_kernel_address_response"]
        [::core::mem::align_of::<limine_kernel_address_response>() - 8usize];
    ["Offset of field: limine_kernel_address_response::revision"]
        [::core::mem::offset_of!(limine_kernel_address_response, revision) - 0usize];
    ["Offset of field: limine_kernel_address_response::physical_base"]
        [::core::mem::offset_of!(limine_kernel_address_response, physical_base) - 8usize];
    ["Offset of field: limine_kernel_address_response::virtual_base"]
        [::core::mem::offset_of!(limine_kernel_address_response, virtual_base) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_kernel_address_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_kernel_address_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_kernel_address_request"]
        [::core::mem::size_of::<limine_kernel_address_request>() - 48usize];
    ["Alignment of limine_kernel_address_request"]
        [::core::mem::align_of::<limine_kernel_address_request>() - 8usize];
    ["Offset of field: limine_kernel_address_request::id"]
        [::core::mem::offset_of!(limine_kernel_address_request, id) - 0usize];
    ["Offset of field: limine_kernel_address_request::revision"]
        [::core::mem::offset_of!(limine_kernel_address_request, revision) - 32usize];
    ["Offset of field: limine_kernel_address_request::response"]
        [::core::mem::offset_of!(limine_kernel_address_request, response) - 40usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_dtb_response {
    pub revision: u64,
    pub dtb_ptr: *mut ::core::ffi::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_dtb_response"][::core::mem::size_of::<limine_dtb_response>() - 16usize];
    ["Alignment of limine_dtb_response"][::core::mem::align_of::<limine_dtb_response>() - 8usize];
    ["Offset of field: limine_dtb_response::revision"]
        [::core::mem::offset_of!(limine_dtb_response, revision) - 0usize];
    ["Offset of field: limine_dtb_response::dtb_ptr"]
        [::core::mem::offset_of!(limine_dtb_response, dtb_ptr) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct limine_dtb_request {
    pub id: [u64; 4usize],
    pub revision: u64,
    pub response: *mut limine_dtb_response,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of limine_dtb_request"][::core::mem::size_of::<limine_dtb_request>() - 48usize];
    ["Alignment of limine_dtb_request"][::core::mem::align_of::<limine_dtb_request>() - 8usize];
    ["Offset of field: limine_dtb_request::id"]
        [::core::mem::offset_of!(limine_dtb_request, id) - 0usize];
    ["Offset of field: limine_dtb_request::revision"]
        [::core::mem::offset_of!(limine_dtb_request, revision) - 32usize];
    ["Offset of field: limine_dtb_request::response"]
        [::core::mem::offset_of!(limine_dtb_request, response) - 40usize];
};
